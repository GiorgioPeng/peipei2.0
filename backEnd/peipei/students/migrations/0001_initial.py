# Generated by Django 2.2.7 on 2019-11-14 14:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dormitory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.BooleanField(choices=[(False, '女生宿舍'), (True, '男生宿舍')], verbose_name='宿舍类别')),
                ('number', models.IntegerField(verbose_name='宿舍号')),
                ('remark', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('addTime', models.DateTimeField(auto_now=True, null=True, verbose_name='信息更新时间')),
            ],
            options={
                'verbose_name': ' 分配宿舍成员信息表',
                'verbose_name_plural': ' 分配宿舍成员信息表',
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('game_type', models.IntegerField(choices=[(1, 'moba'), (2, '角色扮演'), (3, '射击类'), (4, '棋牌类'), (5, '即时战略'), (6, '沙盒类'), (7, '竞速游戏'), (8, '王者荣耀'), (9, '和平精英'), (10, '第五人格'), (11, '捉精灵'), (12, '阴阳师'), (13, '明日方舟'), (14, '炉石'), (15, '崩坏3'), (16, 'FGO')], primary_key=True, serialize=False, verbose_name='游戏类型')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='游戏类型信息添加时间')),
            ],
            options={
                'verbose_name': ' 学生游戏类型信息表',
                'verbose_name_plural': ' 学生游戏类型信息表',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major', models.CharField(max_length=30, verbose_name='专业')),
                ('add_time', models.DateTimeField(auto_now=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '学校专业信息表',
                'verbose_name_plural': '学校专业信息表',
            },
        ),
        migrations.CreateModel(
            name='Novels',
            fields=[
                ('novel_type', models.IntegerField(choices=[(1, '技术知识类'), (2, '文学类小说'), (3, '漫画'), (4, '言情小说'), (5, '玄幻小说'), (6, '科幻小说'), (7, '武侠小说'), (8, '推理小说'), (9, '恐怖小说'), (10, '网游小说'), (11, '二次元小说')], primary_key=True, serialize=False, verbose_name='小说类型')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='小说类型信息添加时间')),
            ],
            options={
                'verbose_name': ' 学生阅读小说信息表',
                'verbose_name_plural': ' 学生阅读小说信息表',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=20, unique=True, verbose_name='学校名称')),
                ('province', models.CharField(max_length=20, verbose_name='省份')),
                ('city', models.CharField(max_length=20, verbose_name='城市')),
                ('remark', models.TextField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '学校信息表',
                'verbose_name_plural': '学校信息表',
            },
        ),
        migrations.CreateModel(
            name='Sports',
            fields=[
                ('sport_type', models.IntegerField(choices=[(1, '跑步'), (2, '羽毛球'), (3, '篮球'), (4, '足球'), (5, '自行车'), (6, '游泳'), (7, '撸铁'), (8, '兵乓球'), (9, '瑜伽舞蹈')], primary_key=True, serialize=False, verbose_name='运动')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='运动信息添加时间')),
            ],
            options={
                'verbose_name': ' 学生运动信息表',
                'verbose_name_plural': ' 学生运动信息表',
            },
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('video_type', models.IntegerField(choices=[(1, '泰剧'), (2, '日韩'), (3, '欧美'), (4, '短视频'), (5, '游戏类'), (6, '音乐类'), (7, '其他类'), (8, '体育'), (9, '歌唱'), (10, '美食'), (11, '情感'), (12, '说唱'), (13, '真人秀')], primary_key=True, serialize=False, verbose_name='看剧类型')),
                ('addTime', models.DateTimeField(auto_now_add=True, verbose_name='看剧类型信息添加时间')),
            ],
            options={
                'verbose_name': ' 学生看剧类型信息表',
                'verbose_name_plural': ' 学生看剧类型信息表',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='学生学号')),
                ('name', models.CharField(max_length=30, verbose_name='学生姓名')),
                ('is_super', models.BooleanField(default=False, verbose_name='超级管理员')),
                ('gender', models.BooleanField(choices=[(True, '男'), (False, '女')], null=True, verbose_name='性别')),
                ('province', models.CharField(blank=True, max_length=10, null=True, verbose_name='学生省份')),
                ('south_north', models.BooleanField(blank=True, choices=[(True, '南方'), (False, '北方')], null=True, verbose_name='南北方')),
                ('south_north_weight', models.IntegerField(blank=True, null=True, verbose_name='南北方权重')),
                ('sports_weight', models.IntegerField(blank=True, null=True, verbose_name='运动权重')),
                ('novels_type_weight', models.IntegerField(blank=True, null=True, verbose_name='小说类型权重')),
                ('videos_type_weight', models.IntegerField(blank=True, null=True, verbose_name='看剧类型权重')),
                ('games_type_weight', models.IntegerField(blank=True, null=True, verbose_name='游戏类型权重')),
                ('winter_temperature', models.IntegerField(blank=True, null=True, verbose_name='冬天空调合适温度')),
                ('summer_temperature', models.IntegerField(blank=True, null=True, verbose_name='夏天空调合适温度')),
                ('temperature_weight', models.IntegerField(blank=True, null=True, verbose_name='空调温度权重')),
                ('sleep_time', models.IntegerField(blank=True, choices=[(-1, '点击添加平均睡眠时段'), (1, '21:00之前'), (2, '21:01-22:00'), (3, '22:01-23:00'), (4, '23:01-23:59'), (5, '24:00之后')], null=True, verbose_name='睡觉时间')),
                ('wake_time', models.IntegerField(blank=True, choices=[(-1, '点击添加平均起床时段'), (1, '7:00之前'), (2, '7:01-8:00'), (3, '8:01-9:00'), (4, '9:01-10:00'), (5, '10:01之后')], null=True, verbose_name='起床时间')),
                ('sleep_weight', models.IntegerField(blank=True, null=True, verbose_name='睡眠重要性权重')),
                ('smoke', models.IntegerField(choices=[(0, '不吸烟'), (1, '吸烟')], null=True, verbose_name='吸烟')),
                ('smoke_weight', models.IntegerField(blank=True, null=True, verbose_name='吸烟权重')),
                ('add_time', models.DateTimeField(auto_now=True, null=True, verbose_name='学生信息更新时间')),
                ('dormitory', models.ForeignKey(null=True, on_delete='宿舍号', to='students.Dormitory')),
                ('games_type', models.ManyToManyField(blank=True, null=True, related_name='游戏类型', to='students.Games')),
                ('major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.Major', verbose_name='专业')),
                ('novels_type', models.ManyToManyField(null=True, to='students.Novels', verbose_name='小说类型')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.School')),
                ('sports', models.ManyToManyField(blank=True, null=True, to='students.Sports', verbose_name='运动')),
                ('videos_type', models.ManyToManyField(blank=True, null=True, related_name='看剧类型', to='students.Videos')),
            ],
            options={
                'verbose_name': ' 学生基本信息表',
                'verbose_name_plural': ' 学生基本信息表',
            },
        ),
        migrations.AddField(
            model_name='major',
            name='school',
            field=models.ManyToManyField(to='students.School', verbose_name='学校'),
        ),
        migrations.AddField(
            model_name='dormitory',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.School', verbose_name='学校'),
        ),
    ]
